ggsave(titlePNG, width = 6.5, height = 4)
return(sampleSubset)
}
samples_dVicuna <- bind_rows(damagedModern[9,], samples_0.01[1:15,], samples_0.01[17:67,])
dVicuna.pca <- pca(samples_dVicuna, "angsd/oneDamaged/vicuna2.covMat", "PCA (>0.01x) with one damaged vicuna", "pca_dVicuna2.png")
source("~/Downloads/jackknife.R", echo=TRUE)
cat("\t",paste("vicugna.txt",".boot",sep=""),"\n")
########### do not change ################3
l<-commandArgs(TRUE)
getArgs<-function(x,l)
unlist(strsplit(grep(paste("^",x,"=",sep=""),l,val=T),"="))[2]
Args<-function(l,args){
if(! all(sapply(strsplit(l,"="),function(x)x[1])%in%names(args))){
cat("Error -> ",l[!sapply(strsplit(l,"="),function(x)x[1])%in%names(args)]," is not a valid argument")
q("no")
}
arguments<-list()
for(a in names(args))
arguments[[a]]<-getArgs(a,l)
if(any(!names(args)%in%names(arguments)&sapply(args,is.null))){
cat("Error -> ",names(args)[!names(args)%in%names(arguments)&sapply(args,is.null)]," is not optional!\n")
q("no")
}
for(a in names(args))
if(is.null(arguments[[a]]))
arguments[[a]]<-args[[match(a,names(args))]]
arguments
}
print.args<-function(args,des){
if(missing(des)){
des<-as.list(rep("",length(args)))
names(des)<-names(args)
}
cat("->  needed arguments:\n")
mapply(function(x)cat("\t",x,":",des[[x]],"\n"),cbind(names(args)[sapply(args,is.null)]))
cat("->  optional arguments (defaults):\n")
mapply(function(x)cat("\t",x," (",args[[x]],")",":",des[[x]],"\n"),cbind(names(args)[!sapply(args,is.null)]))
q("no")
}
###### ####### ###### ###### ###### #######
# choose your parameters and defaults
# NULL is an non-optional argument, NA is an optional argument with no default, others are the default arguments
args<-list(file=NULL,indNames=NULL,outfile="out",boot=0)
#if no argument are given prints the need arguments and the optional ones with default
des<-list(file="the .abbababa filename",indNames="list of individual names (you can use the bam.filelist)",outfile="name of output file",boot="print results for each bootstrap(jackknife), 0=NO")
######################################
#######get arguments and add to workspace
### do not change
if(length(l)==0) print.args(args,des)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knit("input.Rmd")
0.0667 + 0.009 + 0.003 + 0.0088 + 0.0046 + 0.0648
0.0067 + 0.0189 + 0.0718
0.0667 + 0.009 + 0.003 + 0.0088 + 0.0046 + 0.0648
0.0067 + 0.0189 + 0.0718
0.0667 + 0.009 + 0.003 + 0.0088 + 0.0046 + 0.0648
setwd("~/MScBioinformatics/Thesis/abbababa")
library(tidyverse)
library(dplyr)
# Lama genus (accidentally contains vicuña, so needs to be removed)
abbababa_stats <- as_tibble(read.csv("inclDamaged.txt", header = TRUE, sep = "\t")) %>%
filter(!grepl("Vicugna", H1) & !grepl("Vicugna", H2) & !grepl("Vicugna", H3))
# Swap mislabeled cacsilensis based on PCA
abbababa_modified <- abbababa_stats %>%
mutate(H1 = ifelse(str_detect(H1, "SRR11905261|SRR11905272"), "converted_LamaGuanicoeGuanicoe", H1),
H2 = ifelse(str_detect(H2, "SRR11905261|SRR11905272"), "converted_LamaGuanicoeGuanicoe", H2))
# Vicugna genus
vicugna.abbababa <- as_tibble(read.csv("vicugna.txt", header = TRUE, sep = "\t"))
get_second_element <- function(x) {
return(x[2])
}
abbababa <- function(statistics, h3_ind, plot_name){
# (LAMA GENUS) Produce and save D-statistics plot for a sample in the H3 position
dedamaged <- h3_ind
if(substr(h3_ind, 1, 1) == "d") {
dedamaged <- substr(h3_ind, 2, nchar(h3_ind))
}
ancient_stats <- statistics %>%
filter(H3==h3_ind) %>%
filter(!grepl("C21|C72", H1) & !grepl("C21|C72", H2) & !grepl(dedamaged, H1) & !grepl(dedamaged, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Glama", H2) | (!grepl("Glama", H1) & !grepl("Glama", H2) & !grepl("GuanicoeGuanicoe", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-"))
print(distinct(ancient_stats, select=Comparison))
ancient_stats$Comparison <- as.factor(ancient_stats$Comparison)
p <- ggplot(ancient_stats, aes(x=Comparison, y=Dstat)) +
geom_jitter(position=position_jitter(0.1), aes(colour = abs(Z) > 3)) +
scale_colour_manual(name = '|Z| > 3', values = setNames(c('tomato','black'),c(T, F))) +
scale_x_discrete(labels= c("A = Llama, B = Cacsilensis",
"A = Llama, B = Guanaco",
"A = Cacsilensis, B = Guanaco")) +
scale_y_continuous(limits = c(-0.5, 0.5)) +
labs(
x = "Comparisons",
y = "D-statistic",
size = 10) +
theme_bw() +
theme(legend.position = c(.9, .8)) +
theme(axis.text.x = element_text(size = 9))  +
theme(axis.text.y = element_text(size = 10))
plot(p)
# Save plot
ggsave(plot_name, width = 6.5, height = 4)
}
abbababa_vicugna <- function(statistics, h3_ind, plot_name){
# (VICUGNA GENUS) Produce and save D-statistics plot for a sample in the H3 position
dedamaged <- h3_ind
if(substr(h3_ind, 1, 1) == "d") {
dedamaged <- substr(h3_ind, 2, nchar(h3_ind))
}
ancient_stats <- statistics %>%
filter(H3==h3_ind) %>%
filter(!grepl("C20", H1) & !grepl("C20", H2) & !grepl(dedamaged, H1) & !grepl(dedamaged, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Pacos", H2) | (!grepl("Pacos", H1) & !grepl("Pacos", H2) & !grepl("VicugnaVicugna", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-"))
print(distinct(ancient_stats, select=Comparison))
ancient_stats$Comparison <- as.factor(ancient_stats$Comparison)
print(ancient_stats$Comparison)
p <- ggplot(ancient_stats, aes(x=Comparison, y=Dstat)) +
geom_jitter(position=position_jitter(0.1), aes(colour = abs(Z) > 3)) +
scale_colour_manual(name = '|Z| > 3', values = setNames(c('tomato','black'),c(T, F))) +
scale_x_discrete(labels= c("A = Alpaca, B = Mensalis",
"A = Alpaca, B = Vicuña",
"A = Vicuña, B = Mensalis")) +
scale_y_continuous(limits = c(-0.5, 0.5)) +
labs(
x = "Comparisons",
y = "D-statistic",
size = 20) +
theme_bw() +
theme(legend.position = c(.9, .8)) +
theme(axis.text.x = element_text(size = 9))  +
theme(axis.text.y = element_text(size = 10))
plot(p)
# Save plot
ggsave(plot_name, width = 6.5, height = 4)
}
compare_damage <- function(statistics, h3_ind, plot_name){
# (LAMA GENUS) Compare modern sample D-statistics to its damaged modern counterpart
tb_nodamage <- statistics %>%
filter(startsWith(H3, paste0(h3_ind, collapse = ""))) %>%
filter(!grepl("C21|C72", H1) & !grepl("C21|C72", H2) & !grepl(h3_ind, H1) & !grepl(h3_ind, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Glama", H2) | (!grepl("Glama", H1) & !grepl("Glama", H2) & !grepl("Cacsilensis", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-")) %>%
arrange(H1, H2) %>%
rename("D_nodamage" = Dstat)
tb_nodamage$Comparison <- as.factor(tb_nodamage$Comparison)
damaged_version <- paste("d",h3_ind, sep="")
print(damaged_version)
tb_damage <- statistics %>%
filter(startsWith(H3, paste0(damaged_version, collapse = ""))) %>%
filter(!grepl("C21|C72", H1) & !grepl("C21|C72", H2) & !grepl(h3_ind, H1) & !grepl(h3_ind, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Glama", H2) | (!grepl("Glama", H1) & !grepl("Glama", H2) & !grepl("Cacsilensis", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-")) %>%
arrange(H1, H2) %>%
rename("D_damage" = Dstat)
tb_damage$Comparison <- as.factor(tb_damage$Comparison)
print(tb_damage)
combined_df <- bind_cols(select(tb_nodamage, D_nodamage), select(tb_damage, D_damage))
print(combined_df)
p <- ggplot(combined_df, aes(x=D_nodamage, y=D_damage)) +
geom_point() +
labs(
x = "D-statistic (no damage)",
y = "D-statistic (damage)") +
theme_bw()
plot(p)
# Save plot
ggsave(plot_name, width = 6.5, height = 4)
}
abbababa(abbababa_modified, "C72", "C72.ABBABABA_modified.png")
abbababa_vicugna(vicugna.abbababa, "C20", "C20.ABBABABA.png")
abbababa(abbababa_modified, "C21", "C21.ABBABABA_modified.png")
abbababa(abbababa_modified, "SRR11905251_LamaGuanicoeGuanicoe", "SRR11905251.ABBABABA.png")
abbababa(abbababa_modified, "SRR11905273_LamaGuanicoeCacsilensis", "Cacsilensis.ABBABABA.png")
abbababa_vicugna(vicugna.abbababa, "SRR11905263_VicugnaVicugnaVicugna", "SRR11905263.ABBABABA.png")
unique(abbababa_modified, H1)
abbababa_modified
unique(abbababa_modified, abbababa_modified$H1)
unique(abbababa_modified, H1)
abbababa_modified
unique(abbababa_modified$H1)
abbababa(abbababa_modified, "SRR11905270_LamaGlama", "SRR11905270_LamaGlama.ABBABABA.png")
setwd("~/MScBioinformatics/Thesis")
library(ggplot2)
library(dplyr)
data <- read.table("C21_sum_file.txt", header = FALSE)
ggplot(data, aes(x = V1)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black") +
labs(x = "Values", y = "Frequency", title = "Histogram of Values")
setwd("~/MScBioinformatics/Thesis/admixture")
library(tidyverse)
library(cowplot)
# Modern samples
LLA_GuaCac <- read_csv("LLA.bin.xz")
admixture_plot(LLA_GuaCac, 5, "LLA_GuaCac.png")
admixture_plot <- function(sample_set, chroms=10, plot_name){
# Plot and save admixture plot for the given bin file
# Find the index of the fifth occurrence of 0 in the 'map' column
index <- which(sample_set$map == 0)[chroms]
# Remove rows from the index onwards
sample_set <- sample_set %>%
slice(1:(index - 1))
zero_indices <- unlist(lapply(which(sample_set$map == 0), function(x) (x / 100) - 0.01))
sample_set <- sample_set %>%
mutate(map = seq(0, length.out = n(), by = 0.01))
nice_plot <- sample_set %>% gather(k, v, -chrom:-n_snps) %>%
filter(k!="AFR", v>.1) %>%
ggplot(aes(x=map, y=v, fill=k)) + geom_col() +
#geom_vline(xintercept = zero_indices, color = "black", size=0.3) +
xlab(expression(paste("Base-pair distance ", (10^8)))) +
ylab("Pr(Local Ancestry)") +
labs(fill = "Ancestry") +
scale_fill_manual(values = c('GUA' = 'steelblue', 'GUAVIC' = 'darkorange', 'VIC' = 'forestgreen',
'CAC' = 'salmon', 'GUACAC' = 'maroon')) +
theme_minimal()
plot(nice_plot)
ggsave(plot_name, nice_plot, width = 10, height = 2)
}
admixture_plot(LLA_GuaCac, 5, "LLA_GuaCac.png")
# Modern samples
LLA_GuaCac <- read_csv("LLA.bin.xz")
# Modern samples
LLA_GuaCac <- read_csv("bin_files/LLA.bin.xz")
admixture_plot(LLA_GuaCac, 5, "LLA_GuaCac.png")
admixture_plot(LLA_GuaCac, 62, "LLA_GuaCac.png")
setwd("~/MScBioinformatics/Thesis/pca")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
knit("input.Rmd")
library(ggplot2)
library(scales)
filter(samples_0.01.pca, PC2 <0)
samples_0.01.pca <- pca(samples_0.01, "angsd/angsd_0.01.covMat", "PCA (>0.01X) using ANGSD",
"pcaPlots/angsd_0.01.png")
samples_0.01 <- samples %>% filter(Coverage > 0.01)
samples_0.01.pca <- pca(samples_0.01, "angsd/angsd_0.01.covMat", "PCA (>0.01X) using ANGSD",
"pcaPlots/angsd_0.01.png")
samples_0.01.pca <- pca(samples_0.01, "cov_matrices/angsd_0.01.covMat", "PCA (>0.01X) using ANGSD",
"pcaPlots/angsd_0.01.png")
filter(samples_0.01.pca, PC1 <0 & PC2 > 0)
samples_0.01.pca <- pca(samples_0.01, "cov_matrices/angsd_0.01.covMat", "PCA (>0.01X) using ANGSD",
"pcaPlots/angsd_0.01.png")
filter(samples_0.01.pca, PC1 >0 & PC2 > 0)
filter(samples_0.01.pca, PC1 <0 & PC2 > 0)
filter(samples_0.01.pca, PC1 >0 & PC2 > 0)
setwd("~/MScBioinformatics/Thesis/abbababa")
library(tidyverse)
library(dplyr)
# Lama genus (accidentally contains vicuña, so needs to be removed)
abbababa_stats <- as_tibble(read.csv("inclDamaged.txt", header = TRUE, sep = "\t")) %>%
filter(!grepl("Vicugna", H1) & !grepl("Vicugna", H2) & !grepl("Vicugna", H3))
# Swap mislabeled cacsilensis based on PCA
abbababa_modified <- abbababa_stats %>%
mutate(H1 = ifelse(str_detect(H1, "SRR11905261|SRR11905272"), "converted_LamaGuanicoeGuanicoe", H1),
H2 = ifelse(str_detect(H2, "SRR11905261|SRR11905272"), "converted_LamaGuanicoeGuanicoe", H2))
# Vicugna genus
vicugna.abbababa <- as_tibble(read.csv("vicugna.txt", header = TRUE, sep = "\t"))
get_second_element <- function(x) {
return(x[2])
}
abbababa <- function(statistics, h3_ind, plot_name){
# (LAMA GENUS) Produce and save D-statistics plot for a sample in the H3 position
dedamaged <- h3_ind
if(substr(h3_ind, 1, 1) == "d") {
dedamaged <- substr(h3_ind, 2, nchar(h3_ind))
}
ancient_stats <- statistics %>%
filter(H3==h3_ind) %>%
filter(!grepl("C21|C72", H1) & !grepl("C21|C72", H2) & !grepl(dedamaged, H1) & !grepl(dedamaged, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Glama", H2) | (!grepl("Glama", H1) & !grepl("Glama", H2) & !grepl("GuanicoeGuanicoe", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-"))
print(distinct(ancient_stats, select=Comparison))
ancient_stats$Comparison <- as.factor(ancient_stats$Comparison)
p <- ggplot(ancient_stats, aes(x=Comparison, y=Dstat)) +
geom_jitter(position=position_jitter(0.1), aes(colour = abs(Z) > 3)) +
scale_colour_manual(name = '|Z| > 3', values = setNames(c('tomato','black'),c(T, F))) +
scale_x_discrete(labels= c("A = Llama, B = Cacsilensis",
"A = Llama, B = Guanaco",
"A = Cacsilensis, B = Guanaco")) +
scale_y_continuous(limits = c(-0.5, 0.5)) +
labs(
x = "Comparisons",
y = "D-statistic",
size = 10) +
theme_bw() +
theme(legend.position = c(.9, .8)) +
theme(axis.text.x = element_text(size = 9))  +
theme(axis.text.y = element_text(size = 10))
plot(p)
# Save plot
ggsave(plot_name, width = 6.5, height = 4)
}
abbababa_vicugna <- function(statistics, h3_ind, plot_name){
# (VICUGNA GENUS) Produce and save D-statistics plot for a sample in the H3 position
dedamaged <- h3_ind
if(substr(h3_ind, 1, 1) == "d") {
dedamaged <- substr(h3_ind, 2, nchar(h3_ind))
}
ancient_stats <- statistics %>%
filter(H3==h3_ind) %>%
filter(!grepl("C20", H1) & !grepl("C20", H2) & !grepl(dedamaged, H1) & !grepl(dedamaged, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Pacos", H2) | (!grepl("Pacos", H1) & !grepl("Pacos", H2) & !grepl("VicugnaVicugna", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-"))
print(distinct(ancient_stats, select=Comparison))
ancient_stats$Comparison <- as.factor(ancient_stats$Comparison)
print(ancient_stats$Comparison)
p <- ggplot(ancient_stats, aes(x=Comparison, y=Dstat)) +
geom_jitter(position=position_jitter(0.1), aes(colour = abs(Z) > 3)) +
scale_colour_manual(name = '|Z| > 3', values = setNames(c('tomato','black'),c(T, F))) +
scale_x_discrete(labels= c("A = Alpaca, B = Mensalis",
"A = Alpaca, B = Vicuña",
"A = Vicuña, B = Mensalis")) +
scale_y_continuous(limits = c(-0.5, 0.5)) +
labs(
x = "Comparisons",
y = "D-statistic",
size = 20) +
theme_bw() +
theme(legend.position = c(.9, .8)) +
theme(axis.text.x = element_text(size = 9))  +
theme(axis.text.y = element_text(size = 10))
plot(p)
# Save plot
ggsave(plot_name, width = 6.5, height = 4)
}
compare_damage <- function(statistics, h3_ind, plot_name){
# (LAMA GENUS) Compare modern sample D-statistics to its damaged modern counterpart
tb_nodamage <- statistics %>%
filter(startsWith(H3, paste0(h3_ind, collapse = ""))) %>%
filter(!grepl("C21|C72", H1) & !grepl("C21|C72", H2) & !grepl(h3_ind, H1) & !grepl(h3_ind, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Glama", H2) | (!grepl("Glama", H1) & !grepl("Glama", H2) & !grepl("Cacsilensis", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-")) %>%
arrange(H1, H2) %>%
rename("D_nodamage" = Dstat)
tb_nodamage$Comparison <- as.factor(tb_nodamage$Comparison)
damaged_version <- paste("d",h3_ind, sep="")
print(damaged_version)
tb_damage <- statistics %>%
filter(startsWith(H3, paste0(damaged_version, collapse = ""))) %>%
filter(!grepl("C21|C72", H1) & !grepl("C21|C72", H2) & !grepl(h3_ind, H1) & !grepl(h3_ind, H2)) %>%
filter(sapply(strsplit(H1, "_"), get_second_element) != sapply(strsplit(H2, "_"), get_second_element)) %>%
mutate(is_bc = grepl("Glama", H2) | (!grepl("Glama", H1) & !grepl("Glama", H2) & !grepl("Cacsilensis", H2))) %>%
mutate(col1_new = if_else(is_bc, H2, H1),
col2_new = if_else(is_bc, H1, H2),
col6_new = if_else(is_bc, -Dstat, Dstat)) %>%
select(-c(H1, H2, Dstat, is_bc)) %>%
rename(H1 = col1_new, H2 = col2_new, Dstat = col6_new) %>%
mutate(Comparison = paste(sapply(strsplit(H1, "_"), get_second_element), sapply(strsplit(H2, "_"), get_second_element), sep="-")) %>%
arrange(H1, H2) %>%
rename("D_damage" = Dstat)
tb_damage$Comparison <- as.factor(tb_damage$Comparison)
print(tb_damage)
combined_df <- bind_cols(select(tb_nodamage, D_nodamage), select(tb_damage, D_damage))
print(combined_df)
p <- ggplot(combined_df, aes(x=D_nodamage, y=D_damage)) +
geom_point() +
labs(
x = "D-statistic (no damage)",
y = "D-statistic (damage)") +
theme_bw()
plot(p)
# Save plot
ggsave(plot_name, width = 6.5, height = 4)
}
abbababa_modified
unique(abbababa_modified$H1)
abbababa(abbababa_stats, "dSRR11905246_LamaGlama", "dSRR11905246_LamaGlama.ABBABABA.png")
abbababa(abbababa_modified, "dSRR11905250_LamaGuanicoeGuanicoe", "dGuanaco.ABBABABA_modified.png")
abbababa(abbababa_stats, "dSRR11905273_LamaGuanicoeCacsilensis", "dSRR11905273_LamaGuanicoeCacsilensis.ABBABABA.png")
abbababa(abbababa_modified, "dSRR11905246_LamaGlama", "dSRR11905246_LamaGlama.ABBABABA.png")
abbababa(abbababa_modified, "dSRR11905273_LamaGuanicoeCacsilensis", "dSRR11905273_LamaGuanicoeCacsilensis.ABBABABA.png")
setwd("~/MScBioinformatics/Thesis/admixture")
library(tidyverse)
library(cowplot)
# Modern samples
LLA_GuaCac <- read_csv("bin_files/LLA.bin.xz")
LLA_GuaCac %>%
filter(map == 0) %>%
slice(5:(6 * 62))
# Find the row index of the fifth occurrence of 0 in 'map' column
fifth_zero_row <- which(LLA_GuaCac$map == 0)[5]
# Find the row index of the sixth occurrence of 0 in 'map' column
sixth_zero_row <- which(LLA_GuaCac$map == 0)[6]
# Filter the rows between the fifth and sixth occurrence of 0
filtered_data <- LLA_GuaCac[fifth_zero_row:sixth_zero_row, ]
# View the filtered data
View(filtered_data)
setwd("~/MScBioinformatics/Thesis/admixture")
library(tidyverse)
library(cowplot)
# Ancient Samples
C72_GuaVic <- read_csv("bin_files//C72_GuaVic.bin.xz")
C72_GuaCac <- read_csv("C72_GuaCac.bin.xz")
# Ancient Samples
C72_GuaVic <- read_csv("bin_files//C72_GuaVic.bin.xz")
# Ancient Samples
C72_GuaVic <- read_csv("bin_files//C72_GuaVic.bin.xz")
C72_GuaCac <- read_csv("bin_files//C72_GuaCac.bin.xz")
C21_GuaVic <- read_csv("bin_files//C21_GuaVic.bin.xz")
C21_GuaCac <- read_csv("bin_files//C21_GuaCac.bin.xz")
C20_GuaVic <- read_csv("bin_files//C20_GuaVic.bin.xz")
# Modern damaged samples
modernGua_GuaCac <- read_csv("bin_files//modernGua_GuaCac.bin.xz")
modernCac_GuaCac <- read_csv("bin_files//modernCac_GuaCac.bin.xz")
modernGua_GuaVic <- read_csv("bin_files//modernGua_GuaVic.bin.xz")
modernCac_GuaVic <- read_csv("bin_files//modernCac_GuaVic.bin.xz")
modernVic_GuaVic <- read_csv("bin_files//modernVic_GuaVic.bin.xz")
# Modern samples
LLA_GuaCac <- read_csv("bin_files/LLA.bin.xz")
# Find the row index of the fifth occurrence of 0 in 'map' column
fifth_zero_row <- which(LLA_GuaCac$map == 0)[5]
# Find the row index of the sixth occurrence of 0 in 'map' column
sixth_zero_row <- which(LLA_GuaCac$map == 0)[6]
# Filter the rows between the fifth and sixth occurrence of 0
filtered_data <- LLA_GuaCac[fifth_zero_row:sixth_zero_row, ]
# View the filtered data
View(filtered_data)
admixture_plot <- function(sample_set, chroms=10, plot_name){
# Plot and save admixture plot for the given bin file
# Find the index of the fifth occurrence of 0 in the 'map' column
index <- which(sample_set$map == 0)[chroms]
# Remove rows from the index onwards
sample_set <- sample_set %>%
slice(1:(index - 1))
zero_indices <- unlist(lapply(which(sample_set$map == 0), function(x) (x / 100) - 0.01))
sample_set <- sample_set %>%
mutate(map = seq(0, length.out = n(), by = 0.01))
nice_plot <- sample_set %>% gather(k, v, -chrom:-n_snps) %>%
filter(k!="AFR", v>.1) %>%
ggplot(aes(x=map, y=v, fill=k)) + geom_col() +
#geom_vline(xintercept = zero_indices, color = "black", size=0.3) +
xlab(expression(paste("Base-pair distance ", (10^8)))) +
ylab("Pr(Local Ancestry)") +
labs(fill = "Ancestry") +
scale_fill_manual(values = c('GUA' = 'steelblue', 'GUAVIC' = 'darkorange', 'VIC' = 'forestgreen',
'CAC' = 'salmon', 'GUACAC' = 'maroon')) +
theme_minimal()
plot(nice_plot)
ggsave(plot_name, nice_plot, width = 10, height = 2)
}
# Create admixture plots and save in local directory
admixture_plot(C20_GuaVic, 62, "C20_GuaVic.png")
C72_GuaVic
# Create admixture plots and save in local directory
admixture_plot(C20_GuaVic, 62, "C20_GuaVic.png")
admixture_plot <- function(sample_set, chroms=10, plot_name){
# Plot and save admixture plot for the given bin file
# Find the index of the fifth occurrence of 0 in the 'map' column
index <- which(sample_set$map == 0)[chroms]
# Remove rows from the index onwards
sample_set <- sample_set %>%
slice(1:(index - 1))
zero_indices <- unlist(lapply(which(sample_set$map == 0), function(x) (x / 100) - 0.01))
sample_set <- sample_set %>%
mutate(map = seq(0, length.out = n(), by = 0.01))
nice_plot <- sample_set %>% gather(k, v, -chrom:-n_snps) %>%
filter(k!="AFR", v>.1) %>%
ggplot(aes(x=map, y=v, fill=k)) + geom_col() +
geom_vline(xintercept = zero_indices, color = "black", size=0.3) +
xlab(expression(paste("Base-pair distance ", (10^8)))) +
ylab("Pr(Local Ancestry)") +
labs(fill = "Ancestry") +
scale_fill_manual(values = c('GUA' = 'steelblue', 'GUAVIC' = 'darkorange', 'VIC' = 'forestgreen',
'CAC' = 'salmon', 'GUACAC' = 'maroon')) +
theme_minimal()
plot(nice_plot)
ggsave(plot_name, nice_plot, width = 10, height = 2)
}
# Create admixture plots and save in local directory
admixture_plot(C20_GuaVic, 62, "C20_GuaVic.png")
C72_GuaVic
